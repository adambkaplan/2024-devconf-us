apiVersion: machine.openshift.io/v1beta1
kind: MachineSet
metadata:
  labels:
    machine.openshift.io/cluster-api-cluster: $INFRA_ID 
  name: $INFRA_ID-arm64-machine-set
  namespace: openshift-machine-api
spec:
  replicas: 1
  selector:
    matchLabels:
      machine.openshift.io/cluster-api-cluster: $INFRA_ID 
      machine.openshift.io/cluster-api-machineset: $INFRA_ID-$MACHINE_ROLE-$REGION 
  template:
    metadata:
      labels:
        machine.openshift.io/cluster-api-cluster: $INFRA_ID
        machine.openshift.io/cluster-api-machine-role: $MACHINE_ROLE 
        machine.openshift.io/cluster-api-machine-type: $MACHINE_ROLE 
        machine.openshift.io/cluster-api-machineset: $INFRA_ID-$MACHINE_ROLE-$REGION 
    spec:
      metadata:
        labels:
          node-role.kubernetes.io/worker: ""
      providerSpec:
        value:
          ami:
            id: $MACHINE_AMI
          apiVersion: awsproviderconfig.openshift.io/v1beta1
          blockDevices:
            - ebs:
                iops: 0
                volumeSize: 120
                volumeType: gp2
          credentialsSecret:
            name: aws-cloud-credentials
          deviceIndex: 0
          iamInstanceProfile:
            id: $INFRA_ID-worker-profile 
          instanceType: m6g.xlarge 
          kind: AWSMachineProviderConfig
          placement:
            availabilityZone: $AWS_AZ
            region: $REGION
          securityGroups:
            - filters:
                - name: tag:Name
                  values:
                    - $INFRA_ID-node
          subnet:
            filters:
              - name: tag:Name
                values:
                  - $INFRA_ID-subnet-private-$AWS_AZ
          tags:
            - name: kubernetes.io/cluster/$INFRA_ID 
              value: owned
            - name: clusterName
              value: $INFRA_ID
            - name: devconf.us/oci-arch
              value: aarch64
          userDataSecret:
            name: worker-user-data